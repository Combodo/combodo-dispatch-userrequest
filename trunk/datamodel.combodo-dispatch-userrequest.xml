<?xml version="1.0" encoding="UTF-8"?>
<itop_design xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0">
  <classes>
    <class id="UserRequest" _delta="must_exist">
      <fields>
        <field id="status" xsi:type="AttributeEnum" _detla="must_exit">
          <values _delta="redefine">
            <value>new</value>
            <value>waiting_for_approval</value>
            <value>approved</value>
            <value>rejected</value>
            <value>assigned</value>
            <value>dispatched</value>
            <value>redispatched</value>
            <value>pending</value>
            <value>escalated_tto</value>
            <value>escalated_ttr</value>
            <value>resolved</value>
            <value>closed</value>
          </values>
        </field>
        <field id="tto" xsi:type="AttributeStopWatch" _delta="must_exist">
          <states>
            <state id="dispatched" _delta="define"/>
          </states>
        </field>
        <field id="ttr" xsi:type="AttributeStopWatch" _delta="must_exist">
          <states>
            <state id="dispatched" _delta="define"/>
            <state id="redispatched" _delta="define"/>
          </states>
        </field>
      </fields>
      <lifecycle>
        <stimuli>
          <stimulus id="ev_dispatch" xsi:type="StimulusUserAction" _delta="define"/>
        </stimuli>
        <states>
          <state id="new" _delta="must_exist">
            <transitions _delta="redefine">
              <transition>
                <stimulus>ev_assign</stimulus>
                <target>assigned</target>
                <actions>
                  <action>
                    <verb>SetAssignedDate</verb>
                  </action>
                </actions>
              </transition>
              <transition>
                <stimulus>ev_dispatch</stimulus>
                <target>dispatched</target>
                <actions/>
              </transition>
              <transition>
                <stimulus>ev_wait_for_approval</stimulus>
                <target>waiting_for_approval</target>
                <actions/>
              </transition>
              <transition>
                <stimulus>ev_timeout</stimulus>
                <target>escalated_tto</target>
                <actions/>
              </transition>
              <transition>
                <stimulus>ev_autoresolve</stimulus>
                <target>resolved</target>
                <actions>
                  <action>
                    <verb>SetResolveDate</verb>
                  </action>
                  <action>
                    <verb>resolveChilds</verb>
                  </action>
                </actions>
              </transition>
            </transitions>
          </state>
          <state id="approved" _delta="must_exist">
            <transitions _delta="redefine">
              <transition>
                <stimulus>ev_timeout</stimulus>
                <target>escalated_tto</target>
                <actions/>
              </transition>
              <transition>
                <stimulus>ev_dispatch</stimulus>
                <target>dispatched</target>
                <actions/>
              </transition>
              <transition>
                <stimulus>ev_assign</stimulus>
                <target>assigned</target>
                <actions>
                  <action>
                    <verb>SetAssignedDate</verb>
                  </action>
                </actions>
              </transition>
              <transition>
                <stimulus>ev_autoresolve</stimulus>
                <target>resolved</target>
                <actions>
                  <action>
                    <verb>SetResolveDate</verb>
                  </action>
                  <action>
                    <verb>resolveChilds</verb>
                  </action>
                </actions>
              </transition>
            </transitions>
          </state>
          <state id="assigned" _delta="must_exist">
            <transitions _delta="redefine">
              <transition>
                <stimulus>ev_pending</stimulus>
                <target>pending</target>
                <actions>
                  <action>
                    <verb>SetLastPendingDate</verb>
                  </action>
                </actions>
              </transition>
              <transition>
                <stimulus>ev_resolve</stimulus>
                <target>resolved</target>
                <actions>
                  <action>
                    <verb>SetResolveDate</verb>
                  </action>
                  <action>
                    <verb>resolveChilds</verb>
                  </action>
                </actions>
              </transition>
              <transition>
                <stimulus>ev_reassign</stimulus>
                <target>assigned</target>
                <actions/>
              </transition>
              <transition>
                <stimulus>ev_timeout</stimulus>
                <target>escalated_ttr</target>
                <actions/>
              </transition>
              <transition>
                <stimulus>ev_autoresolve</stimulus>
                <target>resolved</target>
                <actions>
                  <action>
                    <verb>SetResolveDate</verb>
                  </action>
                  <action>
                    <verb>resolveChilds</verb>
                  </action>
                </actions>
              </transition>
              <transition>
                <stimulus>ev_dispatch</stimulus>
                <target>redispatched</target>
                <actions>
                  <action>
                    <verb>ResetAgent</verb>
                  </action>
                </actions>
              </transition>
            </transitions>
          </state>
          <state id="dispatched" _delta="define">
            <flags>
              <attribute id="ref">
                <read_only/>
              </attribute>
              <attribute id="org_id">
                <mandatory/>
              </attribute>
              <attribute id="caller_id">
                <mandatory/>
              </attribute>
              <attribute id="team_id">
                <mandatory/>
                <must_prompt/>
              </attribute>
              <attribute id="agent_id">
                <hidden/>
              </attribute>
              <attribute id="priority">
                <read_only/>
              </attribute>
              <attribute id="start_date">
                <read_only/>
              </attribute>
              <attribute id="last_update">
                <read_only/>
              </attribute>
              <attribute id="close_date">
                <hidden/>
              </attribute>
              <attribute id="escalation_flag">
                <hidden/>
              </attribute>
              <attribute id="escalation_reason">
                <hidden/>
              </attribute>
              <attribute id="assignment_date">
                <hidden/>
              </attribute>
              <attribute id="resolution_date">
                <hidden/>
              </attribute>
              <attribute id="last_pending_date">
                <hidden/>
              </attribute>
              <attribute id="time_spent">
                <hidden/>
              </attribute>
              <attribute id="resolution_code">
                <hidden/>
              </attribute>
              <attribute id="solution">
                <hidden/>
              </attribute>
              <attribute id="pending_reason">
                <hidden/>
              </attribute>
              <attribute id="user_satisfaction">
                <hidden/>
              </attribute>
              <attribute id="user_comment">
                <hidden/>
              </attribute>
              <attribute id="tto_escalation_deadline">
                <read_only/>
              </attribute>
              <attribute id="sla_tto_passed">
                <hidden/>
              </attribute>
              <attribute id="sla_tto_over">
                <hidden/>
              </attribute>
              <attribute id="sla_ttr_passed">
                <hidden/>
              </attribute>
              <attribute id="ttr_escalation_deadline">
                <hidden/>
              </attribute>
              <attribute id="sla_ttr_over">
                <hidden/>
              </attribute>
            </flags>
            <transitions>
              <transition>
                <stimulus>ev_assign</stimulus>
                <target>assigned</target>
                <actions>
                  <action>
                    <verb>SetAssignedDate</verb>
                  </action>
                </actions>
              </transition>
              <transition>
                <stimulus>ev_timeout</stimulus>
                <target>escalated_tto</target>
                <actions/>
              </transition>
              <transition>
                <stimulus>ev_autoresolve</stimulus>
                <target>resolved</target>
                <actions>
                  <action>
                    <verb>SetResolveDate</verb>
                  </action>
                  <action>
                    <verb>resolveChilds</verb>
                  </action>
                </actions>
              </transition>
            </transitions>
          </state>
          <state id="redispatched" _delta="define">
            <flags>
              <attribute id="ref">
                <read_only/>
              </attribute>
              <attribute id="org_id">
                <mandatory/>
              </attribute>
              <attribute id="team_id">
                <mandatory/>
                <must_prompt/>
              </attribute>
              <attribute id="agent_id">
                <hidden/>
              </attribute>
              <attribute id="priority">
                <read_only/>
              </attribute>
              <attribute id="start_date">
                <read_only/>
              </attribute>
              <attribute id="last_update">
                <read_only/>
              </attribute>
              <attribute id="close_date">
                <hidden/>
              </attribute>
              <attribute id="assignment_date">
                <read_only/>
              </attribute>
              <attribute id="resolution_date">
                <hidden/>
              </attribute>
              <attribute id="last_pending_date">
                <hidden/>
              </attribute>
              <attribute id="time_spent">
                <hidden/>
              </attribute>
              <attribute id="resolution_code">
                <hidden/>
              </attribute>
              <attribute id="solution">
                <hidden/>
              </attribute>
              <attribute id="pending_reason">
                <hidden/>
              </attribute>
              <attribute id="user_satisfaction">
                <hidden/>
              </attribute>
              <attribute id="user_comment">
                <hidden/>
              </attribute>
              <attribute id="tto_escalation_deadline">
                <hidden/>
              </attribute>
              <attribute id="sla_tto_passed">
                <read_only/>
              </attribute>
              <attribute id="sla_tto_over">
                <read_only/>
              </attribute>
              <attribute id="sla_ttr_passed">
                <hidden/>
              </attribute>
              <attribute id="ttr_escalation_deadline">
                <read_only/>
              </attribute>
              <attribute id="sla_ttr_over">
                <hidden/>
              </attribute>
            </flags>
            <transitions>
              <transition>
                <stimulus>ev_assign</stimulus>
                <target>assigned</target>
                <actions/>
              </transition>
              <transition>
                <stimulus>ev_timeout</stimulus>
                <target>escalated_ttr</target>
                <actions/>
              </transition>
              <transition>
                <stimulus>ev_autoresolve</stimulus>
                <target>resolved</target>
                <actions>
                  <action>
                    <verb>SetResolveDate</verb>
                  </action>
                  <action>
                    <verb>resolveChilds</verb>
                  </action>
                </actions>
              </transition>
            </transitions>
          </state>
        </states>
      </lifecycle>
      <methods>
        <method id="ResetAgent" _delta="define">
          <static>false</static>
          <access>public</access>
          <type>LifecycleAction</type>
          <code><![CDATA[	public function ResetAgent($sStimulusCode)
	{
		$this->Set('agent_id', 0);
		return true;
	}]]></code>
        </method>
        <method id="GetIcon">
          <comment>/**&#13;
            * Get the icon representing this object&#13;
            * @param boolean $bImgTag
            If true the result is a full IMG tag (or
            an emtpy string if no icon is defined)&#13;
            * @return string Either the full IMG tag ($bImgTag == true) or just
            the path to the
            icon file&#13;
            */</comment>
          <static>false</static>
          <access>public</access>
          <type>Overload-DBObject</type>
          <code><![CDATA[	public function GetIcon($bImgTag = true)
	{
		$sStatus = $this->Get('status');
		switch($this->GetState())
		{

			case 'escalated_tto':
			case 'escalated_ttr':
			$sIcon = self::MakeIconFromName('user-request-escalated.png');
			break;
			
			case 'resolved':
			case 'closed':
			$sIcon = self::MakeIconFromName('user-request-closed.png');
			break;

			case 'new':
			case 'approved':
			case 'dispatched':
			$sIcon = self::MakeIconFromName('user-request.png');
			$iEscalationDeadline = $this->Get('tto_escalation_deadline');
			if ($iEscalationDeadline != null)
			{
				// A SLA is running
				$oTTOStopWatch = $this->Get('tto');
				if ($oTTOStopWatch->IsThresholdPassed(100))
				{
					$sIcon = self::MakeIconFromName('user-request-escalated.png');
				}
				else if ($oTTOStopWatch->IsThresholdPassed(75))
				{
					$sIcon = self::MakeIconFromName('user-request-deadline.png');
				}
			}
			break;
			
			case 'assigned':
			case 'redispatched':
			$sIcon = self::MakeIconFromName('user-request.png');
			$iEscalationDeadline = $this->Get('ttr_escalation_deadline');
			if ($iEscalationDeadline != null)
			{
				// A SLA is running
				$oTTRStopWatch = $this->Get('ttr');
				if ($oTTRStopWatch->IsThresholdPassed(100))
				{
					$sIcon = self::MakeIconFromName('user-request-escalated.png');
				}
				else if ($oTTRStopWatch->IsThresholdPassed(75))
				{
					$sIcon = self::MakeIconFromName('user-request-deadline.png');
				}
			}
			break;
			
			default:
			$sIcon = MetaModel::GetClassIcon(get_class($this), $bImgTag);
		}
		return $sIcon;
	}]]></code>
        </method>
        <method id="GetHilightClass" _delta="redefine">
          <static>false</static>
          <access>public</access>
          <type>Overload-iDisplay</type>
          <code><![CDATA[	public function GetHilightClass()
	{
		$sHilightClass = '';
		switch($this->GetState())
		{
			case 'new':
			case 'approved':
			case 'dispatched':
			$iEscalationDeadline  = $this->Get('tto_escalation_deadline');
			if ($iEscalationDeadline != null)
			{
				// A SLA is running
                $oTTOStopWatch = $this->Get('tto');
				if ($oTTOStopWatch->IsThresholdPassed(100))
				{
					$sHilightClass = HILIGHT_CLASS_CRITICAL;
				}
				else if ($oTTOStopWatch->IsThresholdPassed(75))
				{
					$sHilightClass = HILIGHT_CLASS_WARNING;
				}
			}
			break;

			case 'assigned':
			case 'redispatched':
			$iEscalationDeadline = $this->Get('ttr_escalation_deadline');
			if ($iEscalationDeadline != null)
			{
				// A SLA is running
                $oTTRStopWatch = $this->Get('ttr');
				if ($oTTRStopWatch->IsThresholdPassed(100))
				{
					$sHilightClass = HILIGHT_CLASS_CRITICAL;
				}
				else if ($oTTRStopWatch->IsThresholdPassed(75))
				{
					$sHilightClass = HILIGHT_CLASS_WARNING;
				}
			}
			break;			
			
			case 'escalated_tto':
			case 'escalated_ttr':
			$sHilightClass = HILIGHT_CLASS_CRITICAL;
			break;
		}
		return $sHilightClass;
	}]]></code>
        </method>
      </methods>
    </class>
  </classes>
  <menus>
    <menu id="UserRequest:RequestsDispatchedToMyTeams" xsi:type="OQLMenuNode" _delta="define">
      <rank>0.5</rank>
      <parent>UserRequest:Shortcuts</parent>
      <oql><![CDATA[SELECT UserRequest JOIN Team ON UserRequest.team_id = Team.id JOIN lnkPersonToTeam AS L ON L.team_id = Team.id WHERE L.person_id = :current_contact_id AND UserRequest.status IN ("dispatched", "redispatched")]]></oql>
      <do_search/>
      <auto_reload>fast</auto_reload>
    </menu>
  </menus>
  <user_rights>
    <profiles>
      <profile id="4" _delta="must_exist">
        <groups>
          <group id="class:UserRequest" _delta="must_exist">
            <actions>
              <action id="ev_dispatch" xsi:type="stimulus" _delta="define">allow</action>
            </actions>
          </group>
        </groups>
      </profile>
      <profile id="5" _delta="must_exist">
        <groups>
          <group id="class:UserRequest" _delta="must_exist">
            <actions>
              <action id="ev_dispatch" xsi:type="stimulus" _delta="define">allow</action>
            </actions>
          </group>
        </groups>
      </profile>
    </profiles>
  </user_rights>
</itop_design>
